---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';

// Datos del diccionario
const philosophicalTerms = [
  {
    term: "A priori / A posteriori",
    definition: "Distinci√≥n sobre el origen del conocimiento. A priori es el conocimiento independiente de la experiencia. A posteriori es el conocimiento que depende de la experiencia.",
    philosopher: "Immanuel Kant",
    example: "La proposici√≥n 'todos los solteros no est√°n casados' es a priori. 'Est√° lloviendo fuera' es a posteriori."
  },
  {
    term: "Dial√©ctica",
    definition: "M√©todo de razonamiento que procede mediante el conflicto de opuestos. En Hegel, es el proceso (tesis-ant√≠tesis-s√≠ntesis) por el cual el Esp√≠ritu se desarrolla.",
    philosopher: "Georg Wilhelm Friedrich Hegel",
    example: "La historia progresa mediante la dial√©ctica: un statu quo (tesis) enfrenta una fuerza opuesta (ant√≠tesis) resultando en una nueva s√≠ntesis."
  },
  {
    term: "Cogito, ergo sum",
    definition: "Fundamento de la duda met√≥dica de Descartes. Es la primera verdad indudable que encuentra: la propia existencia como sujeto pensante.",
    philosopher: "Ren√© Descartes",
    example: "Aunque dude de todo, no puedo dudar de que estoy dudando, por lo tanto existo como ser pensante."
  }
  // Agrega m√°s t√©rminos aqu√≠...
];
---

<!doctype html>
<html lang="es">
	<head>
		<BaseHead title="Diccionario Filos√≥fico" description={SITE_DESCRIPTION} />
		<style>
			:root {
				--color-primary: #2c3e50;
				--color-secondary: #4a6580;
				--color-accent: #e67e22;
				--color-light: #f5f7fa;
				--color-dark: #333;
			}
			
			body {
				font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
				line-height: 1.6;
				color: var(--color-dark);
				background-color: var(--color-light);
				margin: 0;
				padding: 0;
			}
			
			main {
				max-width: 1200px;
				margin: 0 auto;
				padding: 2rem;
			}
			
			.hero {
				text-align: center;
				padding: 3rem 1rem;
				background: linear-gradient(135deg, var(--color-primary) 0%, var(--color-secondary) 100%);
				color: white;
				border-radius: 10px;
				margin-bottom: 3rem;
			}
			
			.hero h1 {
				font-size: 2.8rem;
				margin-bottom: 1rem;
			}
			
			.hero p {
				font-size: 1.2rem;
				max-width: 600px;
				margin: 0 auto;
			}
			
			.search-container {
				margin: 2rem 0;
				text-align: center;
			}
			
			#search {
				width: 100%;
				max-width: 500px;
				padding: 12px 20px;
				border: 2px solid #ddd;
				border-radius: 50px;
				font-size: 1rem;
				outline: none;
				transition: all 0.3s;
			}
			
			#search:focus {
				border-color: var(--color-secondary);
				box-shadow: 0 0 0 3px rgba(74, 101, 128, 0.2);
			}
			
			.alphabet-nav {
				display: flex;
				flex-wrap: wrap;
				justify-content: center;
				gap: 10px;
				margin: 2rem 0;
			}
			
			.letter-btn {
				width: 40px;
				height: 40px;
				display: flex;
				align-items: center;
				justify-content: center;
				background: var(--color-secondary);
				color: white;
				border-radius: 50%;
				font-weight: bold;
				cursor: pointer;
				transition: all 0.3s;
				border: none;
			}
			
			.letter-btn:hover {
				background: var(--color-primary);
				transform: translateY(-3px);
			}
			
			.terms-grid {
				display: grid;
				grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
				gap: 2rem;
				margin-top: 2rem;
			}
			
			.term-card {
				background: white;
				border-radius: 10px;
				padding: 1.5rem;
				box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
				transition: transform 0.3s;
			}
			
			.term-card:hover {
				transform: translateY(-5px);
			}
			
			.term-title {
				color: var(--color-primary);
				margin-top: 0;
				border-bottom: 2px solid var(--color-accent);
				padding-bottom: 0.5rem;
			}
			
			.term-definition {
				color: #444;
			}
			
			.term-meta {
				background: var(--color-light);
				padding: 1rem;
				border-radius: 8px;
				margin: 1rem 0;
				font-size: 0.9rem;
			}
			
			.term-example {
				background: #fffaf0;
				padding: 1rem;
				border-left: 4px solid var(--color-accent);
				border-radius: 4px;
			}
			
			.example-title {
				font-weight: 600;
				margin-bottom: 0.5rem;
				color: var(--color-accent);
			}
			
			@media (max-width: 768px) {
				.terms-grid {
					grid-template-columns: 1fr;
				}
				
				.hero h1 {
					font-size: 2.2rem;
				}
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
			<section class="hero">
				<h1>üìö Diccionario Filos√≥fico</h1>
				<p>Explora los conceptos fundamentales de la filosof√≠a a trav√©s de definiciones claras y concisas</p>
			</section>
			
			<div class="search-container">
				<input type="text" id="search" placeholder="Buscar t√©rmino filos√≥fico...">
			</div>
			
			<div class="alphabet-nav">
				<button class="letter-btn">A</button>
				<button class="letter-btn">B</button>
				<button class="letter-btn">C</button>
				<button class="letter-btn">D</button>
				<button class="letter-btn">E</button>
				<button class="letter-btn">F</button>
				<button class="letter-btn">H</button>
				<button class="letter-btn">I</button>
				<button class="letter-btn">M</button>
				<button class="letter-btn">N</button>
				<button class="letter-btn">P</button>
				<button class="letter-btn">R</button>
				<button class="letter-btn">S</button>
				<button class="letter-btn">T</button>
				<button class="letter-btn">U</button>
				<button class="letter-btn">V</button>
			</div>
			
			<div class="terms-grid">
				{philosophicalTerms.map((term) => (
					<article class="term-card">
						<h2 class="term-title">{term.term}</h2>
						<p class="term-definition">{term.definition}</p>
						<div class="term-meta">
							<p><strong>Fil√≥sofo:</strong> {term.philosopher}</p>
						</div>
						<div class="term-example">
							<div class="example-title">Ejemplo:</div>
							<p>{term.example}</p>
						</div>
					</article>
				))}
			</div>
		</main>
		<Footer />
		
		<script>
			document.addEventListener('DOMContentLoaded', function() {
				const searchInput = document.getElementById('search');
				const termCards = document.querySelectorAll('.term-card');
				const letterButtons = document.querySelectorAll('.letter-btn');
				
				// Funci√≥n de b√∫squeda
				searchInput.addEventListener('input', function() {
					const searchText = this.value.toLowerCase();
					
					termCards.forEach(card => {
						const termText = card.querySelector('.term-title').textContent.toLowerCase();
						const definitionText = card.querySelector('.term-definition').textContent.toLowerCase();
						
						if (termText.includes(searchText) || definitionText.includes(searchText)) {
							card.style.display = 'block';
						} else {
							card.style.display = 'none';
						}
					});
				});
				
				// Filtrado por letra
				letterButtons.forEach(button => {
					button.addEventListener('click', function() {
						const letter = this.textContent;
						
						termCards.forEach(card => {
							const termText = card.querySelector('.term-title').textContent;
							if (termText.startsWith(letter)) {
								card.style.display = 'block';
								card.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
							} else {
								card.style.display = 'none';
							}
						});
					});
				});
			});
		</script>
	</body>
</html>
